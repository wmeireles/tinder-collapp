"""Add missing user columns

Revision ID: a61e77fd540c
Revises: 002
Create Date: 2025-10-06 19:48:27.682908

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a61e77fd540c'
down_revision = '002'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('achievement_type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('earned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invitations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('inviter_id', sa.String(), nullable=False),
    sa.Column('invite_code', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('used_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['used_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invite_code')
    )
    op.create_table('link_in_bio',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('theme_config', sa.Text(), nullable=True),
    sa.Column('links', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('notifications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('creator_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('package_details', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('delivery_time', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('social_media', sa.Text(), nullable=True),
    sa.Column('content_types', sa.Text(), nullable=True),
    sa.Column('niches', sa.Text(), nullable=True),
    sa.Column('target_audience', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('collaboration_goals', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('plan', sa.String(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('swipes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('swiper_id', sa.String(), nullable=False),
    sa.Column('swiped_id', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['swiped_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['swiper_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wanted_posts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('author_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('collaboration_type', sa.String(), nullable=False),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chats',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('match_id', sa.String(), nullable=True),
    sa.Column('wanted_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['wanted_id'], ['wanted_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offer_acceptances',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('offer_id', sa.String(), nullable=False),
    sa.Column('accepter_id', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['accepter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['offer_id'], ['offers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wanted_applications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('wanted_post_id', sa.String(), nullable=False),
    sa.Column('applicant_id', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['wanted_post_id'], ['wanted_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('sender_id', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('collab_suggestions')
    op.add_column('matches', sa.Column('user_a_id', sa.String(), nullable=False))
    op.add_column('matches', sa.Column('user_b_id', sa.String(), nullable=False))
    op.add_column('matches', sa.Column('status', sa.String(), nullable=True))
    op.alter_column('matches', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('matches', 'match_percent',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('matches_creator_a_id_fkey'), 'matches', type_='foreignkey')
    op.drop_constraint(op.f('matches_creator_b_id_fkey'), 'matches', type_='foreignkey')
    op.create_foreign_key(None, 'matches', 'users', ['user_b_id'], ['id'])
    op.create_foreign_key(None, 'matches', 'users', ['user_a_id'], ['id'])
    op.drop_column('matches', 'creator_b_id')
    op.drop_column('matches', 'motivo')
    op.drop_column('matches', 'creator_a_id')
    op.add_column('media_kits', sa.Column('statistics', sa.Text(), nullable=True))
    op.add_column('media_kits', sa.Column('brand_partnerships', sa.Text(), nullable=True))
    op.add_column('media_kits', sa.Column('case_studies', sa.Text(), nullable=True))
    op.add_column('media_kits', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.alter_column('media_kits', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('media_kits', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    op.drop_column('media_kits', 'profile_data')
    op.add_column('users', sa.Column('name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('profile_photo', sa.String(), nullable=True))
    op.add_column('users', sa.Column('onboarding_completed', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('plan', sa.String(), nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('users', 'plan')
    op.drop_column('users', 'onboarding_completed')
    op.drop_column('users', 'profile_photo')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'name')
    op.add_column('media_kits', sa.Column('profile_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.alter_column('media_kits', 'user_id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('media_kits', 'id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('media_kits', 'is_public')
    op.drop_column('media_kits', 'case_studies')
    op.drop_column('media_kits', 'brand_partnerships')
    op.drop_column('media_kits', 'statistics')
    op.add_column('matches', sa.Column('creator_a_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('matches', sa.Column('motivo', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('matches', sa.Column('creator_b_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.create_foreign_key(op.f('matches_creator_b_id_fkey'), 'matches', 'users', ['creator_b_id'], ['id'])
    op.create_foreign_key(op.f('matches_creator_a_id_fkey'), 'matches', 'users', ['creator_a_id'], ['id'])
    op.alter_column('matches', 'match_percent',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('matches', 'id',
               existing_type=sa.String(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.drop_column('matches', 'status')
    op.drop_column('matches', 'user_b_id')
    op.drop_column('matches', 'user_a_id')
    op.create_table('collab_suggestions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('creator_a_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('creator_b_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('titulo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('plataforma', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('frase_inicial_chat', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['creator_a_id'], ['users.id'], name=op.f('collab_suggestions_creator_a_id_fkey')),
    sa.ForeignKeyConstraint(['creator_b_id'], ['users.id'], name=op.f('collab_suggestions_creator_b_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('collab_suggestions_pkey'))
    )
    op.drop_table('messages')
    op.drop_table('wanted_applications')
    op.drop_table('offer_acceptances')
    op.drop_table('chats')
    op.drop_table('wanted_posts')
    op.drop_table('swipes')
    op.drop_table('subscriptions')
    op.drop_table('profiles')
    op.drop_table('offers')
    op.drop_table('notifications')
    op.drop_table('link_in_bio')
    op.drop_table('invitations')
    op.drop_table('achievements')
    # ### end Alembic commands ###